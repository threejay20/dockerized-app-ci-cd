name: CI/CD Pipeline for Dockerized Application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} .

      - name: List Docker Images
        run: docker images

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

      - name: Debug workspace contents
        run: ls -la

      - name: Debug Kubernetes context
        run: kubectl config view

      - name: Test Kubernetes connection
        run: kubectl get nodes

      - name: Run Tests
        run: docker run --rm ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} pytest

  push-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_SECRET }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: kubectl apply -f k8s-deployment.yaml

      - name: Verify Deployment
        run: kubectl get pods
